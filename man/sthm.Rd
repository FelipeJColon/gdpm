% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/heatmap.R
\name{sthm}
\alias{sthm}
\title{Makes a spatio-temporal heatmap of a disease}
\usage{
sthm(df, f = function(x) x, col = heat.colors(12), col_na = "grey",
  x = c(0.85, 0.87, 0.92), show_names = FALSE)
}
\arguments{
\item{df}{an data frame outputed from the \code{getid} function or
with the same structure as an output from this funtion.}

\item{f}{a transforming function. By default the identity function.}

\item{col}{a vector of colors to use for the heatmap.}

\item{col_na}{the color with which to represent the missing values.}

\item{x}{a vector of values between 0 and 1. In proportion of the
figure's range, these numbers express the location of the right end of the
heatmap, and the beginning and end of the color scale that stands on the
right of the heatmap.}

\item{show_names}{logical value saying whether the names of the
provinces should be returned as an output of the function call or not.
By default FALSE.}
}
\description{
Makes a spatio-temporal heatmap of a disease
}
\examples{
# A heatmap of the ILI data:
ili <- getid(ili, from = 2004)
sthm(ili)
# with some data transformations in order to reflect better the contrasts:
sthm(ili, f = sqrt)
sthm(ili, f = function(x) x^.3)
# using some other color palettes, for examples the ones fromt the
# RColorBrewer package:
library(RColorBrewer)
# to see the available color palettes:
display.brewer.all()
sthm(ili, f = function(x) x^.3, col = brewer.pal(11, "RdYlGn"))
sthm(ili, f = function(x) x^.3, col = brewer.pal(11, "RdYlBu"))
sthm(ili, f = function(x) x^.3, col = brewer.pal(11, "PRGn"))
sthm(ili, f = function(x) x^.3, col = brewer.pal(9, "YlOrRd"))
sthm(ili, f = function(x) x^.3, col = brewer.pal(9, "YlOrBr"))
# changing the color of the missing values:
rubella <- getid(rubella)
sthm(rubella, f = sqrt, col = brewer.pal(9, "YlOrRd"))
sthm(rubella, f = sqrt, col = brewer.pal(9, "YlOrRd"), col_na = "blue")
# to order the provinces by latitude:
library(gadmVN)
library(dplyr)
provinces <- gadm()
coord <- coordinates(provinces)
row.names(coord) <- unique(provinces@data$province)
order <- rownames(coord[order(coord[, 2]), ])
order <- data.frame(province = order, order = seq_along(order))
rubella <- left_join(rubella, order, by = "province")
rubella <-  arrange(rubella, order)
sthm(rubella, f = sqrt, col = brewer.pal(9, "YlOrRd"), col_na = "blue")
}
